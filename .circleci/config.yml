version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}

executor:
  name: default
  python-version: 3.7.4
jobs:
  setupCLI:
    docker:
      - image: amazon/aws-cli
    steps:
      - aws-cli/install
      - run:
          command: |
            aws configure set aws_access_key_id \
              $AWS_ACCESS_KEY_ID \
              --profile augusto-circleCI
          name: Configure AWS Access Key ID
      - run:
          command: |
            aws configure set aws_secret_access_key \
              $AWS_SECRET_ACCESS_KEY \
              --profile augusto-circleCI
          name: Configure AWS Secret Access Key
      - checkout
      - run:
          name: Create AWS Stack
          command: |
            aws cloudformation deploy \
              --template template.yml \
              --stack-name prod-${CIRCLE_WORKFLOW_ID} \
              --region=us-west-2 \
              --capabilities CAPABILITY_NAMED_IAM
      - destroy_environment:
          when: on_fail
  configure_infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["b5:d7:f7:e3:fc:ad:81:0d:d0:1e:e5:e9:03:36:b0:d3"]
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible # install the dependencies needed for your playbook
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory.txt playbook.yml
  smoke_tests:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
            name: smoke test.
            command: |
              URL="https://blog.udacity.com/"
              if curl -s --head ${URL} # test if blog.udacity. com exists
              then
               return 0
              else
               return 1
              fi
workflows:
  my_workflow:
    jobs:
      - setupCLI
      - configure_infrastructure:
          requires:
            - setupCLI
      - smoke_tests:
          requires:
            - configure_infrastructure
